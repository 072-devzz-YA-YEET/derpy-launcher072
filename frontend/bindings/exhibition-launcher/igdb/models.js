// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

export class ApiGame {
    /**
     * Creates a new ApiGame instance.
     * @param {Partial<ApiGame>} [$$source = {}] - The source object to create the ApiGame.
     */
    constructor($$source = {}) {
        if (!("id" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["id"] = 0;
        }
        if (!("name" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["name"] = "";
        }
        if (!("summary" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["summary"] = "";
        }
        if (!("cover" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["cover"] = 0;
        }
        if (!("MainCover" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["MainCover"] = "";
        }
        if (!("artworks" in $$source)) {
            /**
             * @member
             * @type {number[]}
             */
            this["artworks"] = [];
        }
        if (!("Banners" in $$source)) {
            /**
             * @member
             * @type {string[]}
             */
            this["Banners"] = [];
        }
        if (!("screenshots" in $$source)) {
            /**
             * @member
             * @type {Image[]}
             */
            this["screenshots"] = [];
        }
        if (!("ScreenshotLinkList" in $$source)) {
            /**
             * @member
             * @type {string[]}
             */
            this["ScreenshotLinkList"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ApiGame instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {ApiGame}
     */
    static createFrom($$source = {}) {
        const $$createField5_0 = $$createType0;
        const $$createField6_0 = $$createType1;
        const $$createField7_0 = $$createType3;
        const $$createField8_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("artworks" in $$parsedSource) {
            $$parsedSource["artworks"] = $$createField5_0($$parsedSource["artworks"]);
        }
        if ("Banners" in $$parsedSource) {
            $$parsedSource["Banners"] = $$createField6_0($$parsedSource["Banners"]);
        }
        if ("screenshots" in $$parsedSource) {
            $$parsedSource["screenshots"] = $$createField7_0($$parsedSource["screenshots"]);
        }
        if ("ScreenshotLinkList" in $$parsedSource) {
            $$parsedSource["ScreenshotLinkList"] = $$createField8_0($$parsedSource["ScreenshotLinkList"]);
        }
        return new ApiGame(/** @type {Partial<ApiGame>} */($$parsedSource));
    }
}

export class Image {
    /**
     * Creates a new Image instance.
     * @param {Partial<Image>} [$$source = {}] - The source object to create the Image.
     */
    constructor($$source = {}) {
        if (!("image_id" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["image_id"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Image instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {Image}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Image(/** @type {Partial<Image>} */($$parsedSource));
    }
}

// Private type creation functions
const $$createType0 = $Create.Array($Create.Any);
const $$createType1 = $Create.Array($Create.Any);
const $$createType2 = Image.createFrom;
const $$createType3 = $Create.Array($$createType2);

// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as torrent$0 from "../../github.com/anacrolix/torrent/models.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * add download
 * start ook torrent meteen
 * @param {string} magnetLink
 * @returns {Promise<torrent$0.Torrent | null> & { cancel(): void }}
 */
export function AddTorrent(magnetLink) {
    let $resultPromise = /** @type {any} */($Call.ByID(1104077984, magnetLink));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType1($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {string} link
 * @returns {Promise<$models.Source> & { cancel(): void }}
 */
export function GetSource(link) {
    let $resultPromise = /** @type {any} */($Call.ByID(3587831512, link));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType2($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

// Private type creation functions
const $$createType0 = torrent$0.Torrent.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = $models.Source.createFrom;
